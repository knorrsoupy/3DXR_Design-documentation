{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Welcome to the 3D XR Design System\u2014a structured framework for creating immersive, interactive, and accessible XR experiences. This system provides guidelines, reusable components, and best practices for designing navigation, UI, and interactions in extended reality (XR).</p>"},{"location":"#why-use-this-design-system","title":"Why Use This Design System?","text":"<ul> <li>Consistency: Standardized UI elements and navigation patterns for XR.</li> <li>Accessibility: Guidelines to ensure usability for diverse users.</li> <li>Performance: Optimized assets and interaction models.</li> <li>Scalability: Modular approach for easy integration across projects.</li> </ul> <p>Who is This For?</p> <p>This system is designed for XR designers, developers, and researchers looking to create intuitive and efficient 3D user interfaces for AR, VR, and MR for industrial metaverse.</p>"},{"location":"#whats-inside","title":"What\u2019s Inside?","text":"<ul> <li>\ud83d\udccc Navigation Patterns \u2013 Movement, UI placement, and interaction strategies.</li> <li>\ud83d\udda5 HUD &amp; UI Interfaces \u2013 Diegetic and non-diegetic UI guidelines.</li> <li>\u26a1 Components &amp; Features \u2013 UI elements, prefabs, and haptic feedback.</li> <li>\ud83d\udcdc Code &amp; Implementation \u2013 API references, sample scripts, and examples.</li> <li>\ud83d\udccf Design Guidelines \u2013 Layout, color, typography, and accessibility principles.</li> </ul>"},{"location":"admonition/","title":"Admonition","text":"<p>Admonition callout:</p> <p>Title of the callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Collapsible callout:</p> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Question</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"code-examples/","title":"Code examples","text":""},{"location":"code-examples/#an-example-of-c-sharp-script","title":"An example of C-Sharp Script","text":"gamecontroller.c<pre><code>using UnityEngine;\nusing System.Collections.Generic;\n\npublic class GameController : MonoBehaviour\n{\n    [Header(\"Sign Settings\")]\n    [SerializeField] private GameObject potholeSign;\n    [SerializeField] private GameObject rampSign;\n    [SerializeField] private GameObject stairCase;\n\n}\n</code></pre>"},{"location":"content-tabs/","title":"Content tabs","text":""},{"location":"content-tabs/#content-tabs","title":"Content Tabs","text":"<p>This is some examples for content tabs</p>"},{"location":"content-tabs/#generic-content","title":"Generic Content","text":"Plain TextUnordered ListOrdered List <p>This is some plain text</p> <ul> <li>First Item</li> <li>Second Item</li> <li>Third Item</li> </ul> <ol> <li>First Item</li> <li>Second Item</li> <li>Third Item</li> </ol>"},{"location":"core-concepts/","title":"Concept Preview","text":"<p>XR design requires a balance of usability, immersion, and performance. This section covers the fundamental principles that guide our 3D XR Design System.</p>"},{"location":"core-concepts/#1-design-philosophy","title":"1. Design Philosophy","text":"<ul> <li>User-Centered: Prioritizing natural interactions and accessibility.</li> <li>Immersive &amp; Diegetic: UI elements should blend into the environment when possible.</li> <li>Scalable: Components should adapt to different hardware and user needs.</li> </ul>"},{"location":"core-concepts/#2-interaction-models","title":"2. Interaction Models","text":""},{"location":"core-concepts/#hand-controller-based-interaction","title":"Hand &amp; Controller-based Interaction","text":"<ul> <li>Raycasting: UI interactions using laser pointers.</li> <li>Direct Touch: Hands physically interacting with UI elements.</li> </ul>"},{"location":"core-concepts/#gaze-based-interaction","title":"Gaze-Based Interaction","text":"<ul> <li>Dwell-based Selection: Users can select elements by looking at them for a fixed duration.</li> <li>Context-aware UI: UI elements appear dynamically based on user focus.</li> </ul>"},{"location":"core-concepts/#gesture-voice-input","title":"Gesture &amp; Voice Input","text":"<ul> <li>Hand Gestures: Swipes, pinches, and grabs for interaction.</li> <li>Voice Commands: Hands-free control using speech recognition.</li> </ul> <p>These principles guide the system\u2019s navigation, UI, and interaction components.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This guide will help you set up the 3D XR Design System for your project.</p> <p>Before we begin, kindly clone the repository : Github link for 3D XR System</p> <p>Before starting, ensure you have the following setup beforehand :-</p>"},{"location":"getting-started/#1-requirements","title":"1. Requirements","text":"<ul> <li>Unity (version 2022.3.XX or later)</li> <li>OpenXR (Depending on the platform)</li> <li>XR Interaction Toolkit</li> </ul>"},{"location":"getting-started/#2-installation-and-quick-start","title":"2. Installation and Quick Start","text":"<ul> <li>Open the project in Unity</li> </ul> <p>Make sure you have URP as your render pipeline (Universal 3D Core).</p> <ul> <li>Go to package manager -&gt; Install XR Interaction Toolkit.</li> <li>Go to Assets Folder -&gt; Open the Scenes Folder -&gt; Open the Walking Store Ver 0.0.1 scene.</li> <li>Play in your Editor.</li> </ul> <p>You're all set! \ud83c\udf89 Check out the Concept Preview section to dive deeper.</p>"},{"location":"hud-ui-interfaces/","title":"HUD &amp; UI Interfaces","text":"<p>User interfaces in XR differ from traditional 2D screens. This section covers best practices for designing HUD elements, diegetic UI, and interactive menus.</p>"},{"location":"hud-ui-interfaces/#1-types-of-ui-in-xr","title":"1. Types of UI in XR","text":""},{"location":"hud-ui-interfaces/#11-diegetic-ui","title":"1.1 Diegetic UI","text":"<ul> <li>UI elements integrated within the environment.</li> <li>Examples: Holographic displays, VR wrist menus.</li> </ul>"},{"location":"hud-ui-interfaces/#12-non-diegetic-ui","title":"1.2 Non-Diegetic UI","text":"<ul> <li>Floating overlays separate from the 3D world.</li> <li>Examples: Health bars, notifications.</li> </ul>"},{"location":"hud-ui-interfaces/#13-spatial-ui","title":"1.3 Spatial UI","text":"<ul> <li>Fixed panels that exist within the scene.</li> <li>Examples: Interactive kiosks, floating buttons.</li> </ul>"},{"location":"hud-ui-interfaces/#2-hud-design-principles","title":"2. HUD Design Principles","text":"<ul> <li>Minimalist Design: Avoid clutter to keep focus on the environment.</li> <li>Scalability: UI should adapt based on distance &amp; user movement.</li> <li>Contrast &amp; Readability: High contrast ensures visibility in different lighting conditions.</li> </ul> <p>Well-designed HUDs and UI improve usability and immersion in XR.</p>"},{"location":"nav-code-snippets/","title":"Code Snippets","text":"<p>This section provides an explanation of the code and logic behind the <code>Navigation</code> script. Both designers and developers can utilize and modify this script as needed.</p>"},{"location":"nav-how-to-use/","title":"Navigation Package","text":""},{"location":"nav-how-to-use/#overview","title":"Overview","text":"<ul> <li>To use the navigation properly, three components are essential for the workflow:<ul> <li>AI Navigation Package: Use this to create the <code>Navmesh Surface</code>. Ensure you have the Navmesh Builder Script.</li> <li>Target Setup : For setting up the target/destination gameobject.</li> <li>Navigator Script: Utilize this script to create the navigation path.</li> </ul> </li> </ul> <p>Get started with Navigation</p> <p>To get started with navigation, we need to import the <code>Navigation Package</code> to your unity project.</p>"},{"location":"nav-how-to-use/#requirements","title":"Requirements","text":"<p>To use the script, ensure the following prerequisites are met:</p> <p>Navmesh Component</p> <p>Without a nav mesh, the package won't work. Make sure you use the <code>navmesh builder</code> script to create a <code>navmesh surface</code> at runtime.</p> <p>Required Prefabs</p> <ol> <li>Line Renderer Prefab</li> <li>Directional Arrow Prefab</li> <li>Smaller Arrow Prefab</li> <li>Corner Arrow Prefab</li> <li>Destination Prefab</li> </ol>"},{"location":"nav-how-to-use/#navmesh-setup-for-runtime","title":"Navmesh Setup for Runtime","text":"<p>If you want a <code>navmesh surface</code> at runtime, follow this part or skip to the next step.</p> <ul> <li>On your <code>Terrain</code> GameObject, add a <code>navmesh surface</code> component, then add the <code>navmesh builder</code> script.</li> </ul>"},{"location":"nav-how-to-use/#target-setup","title":"Target Setup","text":"<p>To set up the target/destination, follow these steps:</p> <ul> <li>Mark the target/destination GameObject with <code>Tag: Target</code>.</li> <li>Add a <code>N**avMeshModifier</code> component to the GameObject and set it to Remove.</li> </ul> <p>Why?</p> <p>This ensures that the GameObject is included on the NavMesh surface. By doing this, the GameObject will not be excluded when creating the NavMesh at runtime. You can turn it off to see the results.</p>"},{"location":"nav-how-to-use/#navigator-setup","title":"Navigator Setup","text":"<p>The navigator script has different compoents that we can change and customize dependin on how you want to se it up, some pre-built prefabs are insitialized </p>"},{"location":"nav-usecases/","title":"Usecases and Components","text":"<p>These are some of the use cases identified for the XR Design System for navigation in in a virtual world. This list is not exhaustive and may evolve as new types and patterns are discovered in the future.</p>"},{"location":"nav-usecases/#use-cases","title":"Use Cases","text":""},{"location":"nav-usecases/#straight-path","title":"Straight Path","text":"<p> A directional indicator that guides the user towards a designated target or a destination.</p>"},{"location":"nav-usecases/#turning","title":"Turning","text":"<p> A directional indicator that guides the user towards a designated target or destination when there is a change in the path's direction.</p>"},{"location":"nav-usecases/#staircase","title":"Staircase","text":"<p> Users must navigate staircases smoothly in XR without discomfort or disorientation. Indicator to show stairs is needed.</p>"},{"location":"nav-usecases/#ramp-case","title":"Ramp Case","text":"<p> The design system should support gradual elevation changes, seamless locomotion, and clear visual cues to prevent disorientation and enhance immersion.</p>"},{"location":"nav-usecases/#caution-indicator","title":"Caution Indicator","text":"<p> In environments such as factories, potential hazards may arise. A caution indicator is essential to alert users to these dangers, ensuring safe navigation within the virtual world.</p>"},{"location":"nav-usecases/#narrow-path-indicator","title":"Narrow Path Indicator","text":"<p> An indicator to alert users when navigating through narrow paths, ensuring they are aware of the restricted space and can proceed with caution.</p>"},{"location":"nav-usecases/#destination-target","title":"Destination / Target","text":"<p> An indicator is needed to clearly mark the destination or target, guiding users to their intended endpoint within the virtual environment.</p>"},{"location":"nav-usecases/#heavy-object","title":"Heavy Object","text":"<p> Users should be alerted when they are carrying a heavy object to ensure they handle it with care and maintain proper posture to avoid strain or injury.</p>"},{"location":"navigation-patterns/","title":"Navigation Patterns","text":"<p>Navigation is crucial in XR, ensuring comfort, accessibility, and efficiency. This section covers different movement techniques and menu placement strategies. We will also list down the navigation patterns along with its use cases:</p>"},{"location":"navigation-patterns/#navigation-types","title":"Navigation Types","text":"ResidueContextual Path HighlightingPulsating Arrows <ul> <li>Residue navigation involves leaving a faint, traceable path (visual, auditory, or tactile) that users have already traversed.</li> </ul> <p>Key Point</p> <p>It helps users understand where they\u2019ve been, improving spatial orientation and ensuring a sense of progress in large or complex navigation systems</p> <ul> <li>The path ahead is highlighted based on context, such as brighter arrows for immediate turns or larger arrows for distant but critical landmarks.</li> </ul> <p>Key Point</p> <p>Ensures users prioritize the right actions at the right time</p> <ul> <li>Arrows that gently pulse or animate to draw attention to the correct path without being overly distracting</li> </ul> <p>Key Point</p> <p>Works well in low-visibility or high-distraction environments, ensuring users notice the guidance</p>"},{"location":"navigation-patterns/#locomotion-methods","title":"Locomotion Methods","text":"<p>Teleportation</p> <ul> <li>Best for reducing motion sickness.</li> <li>Uses an arc-based pointer for destination selection.</li> </ul> <p>Movement Provider</p> <ul> <li>Joystick-controlled movement similar to traditional games.</li> <li>Can cause motion sickness \u2014 recommended to use vignette effects to reduce discomfort.</li> </ul> <p>Continuous Turn Provider</p> <ul> <li>Enables continuous rotation, more fluid in terms of interaction and immersiveness.</li> </ul> <p>May cause motion sickness</p> <p>Snap Turn Provider</p> <ul> <li>Enables instant rotation in set increments, helping prevent motion sickness.</li> <li>Generally, it is recommended to use but sacrifices on immersion.</li> </ul>"},{"location":"navigation-patterns/#hybrid-movement","title":"Hybrid Movement","text":"<ul> <li>Combines teleportation &amp; joystick movement.</li> <li>Useful for applications requiring precise &amp; large-scale movement.</li> </ul>"}]}